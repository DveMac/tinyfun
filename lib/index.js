const _isArray=Array.isArray,{slice:_sl,includes:_inc,concat:_cc,sort:_st,filter:_flt,reduce:_rd,map:_map}=Array.prototype,{split:_s,replace:_rep}=String.prototype,head=(c)=>c[0],slice=(c,d)=>(g)=>_sl.call(g,c,d),length=(c)=>c.length,compose=(c,...d)=>d.length?(...g)=>c(compose(...d)(...g)):c,concat=(...c)=>_cc.apply([],c),map=(c)=>(d,g=null)=>_map.call(d,c,g),reduce=(c,d)=>(g)=>_rd.call(g,c,d),flatten=reduce((c,d)=>concat(c,_isArray(d)?flatten(d):d),[]),uniq=(c)=>[...new Set(c)],filter=(c)=>(d)=>_flt.call(d,c),chain=(c)=>compose(flatten,map(c)),tf={eq:(c)=>(d)=>c===d,gt:(c)=>(d)=>c<d,gte:(c)=>(d)=>c<=d,lt:(c)=>(d)=>c>d,lte:(c)=>(d)=>c>=d,identity:(c)=>c,prop:(c)=>(d)=>d[c],length:length,slice:slice,head:head,init:slice(0,-1),last:compose(head,slice(-1)),tail:slice(1),keys:Object.keys,concat:concat,contains:(c)=>(d)=>_inc.call(d,c),sort:(c)=>(d)=>_st.call(concat([],d),c),map:map,filter:filter,comparator:(c)=>(d,g)=>{const h=c(d,g);return h?1:h?-1:0},reduce:reduce,values:(c)=>map((d)=>c[d])(Object.keys(c)),flatten:flatten,uniq:uniq,intersection:(c,d)=>{const g=new Set(d);return filter((h)=>g.has(h))(uniq(c))},compose:compose,any:(c)=>compose(tf.gt(0),length,filter(c)),find:(c)=>reduce((d,g)=>d||(c(g)?g:d)),union:compose(uniq,concat),difference:(c,d)=>{const g=new Set(d);return filter((h)=>!!g&&!g.has(h))(uniq(c))},chain:chain,flatMap:chain,xprod:(c)=>reduce((d,g)=>concat(d,map((h)=>[h,g])(c)),[]),split:(c)=>(d)=>_s.call(d,c),path:(c)=>(d)=>reduce((g,h)=>g&&h in g?g[h]:void 0,d)(c),replace:(c,d)=>(g)=>_rep.call(g,c,d),groupBy:(c)=>reduce((d,g)=>{const h=c(g)+"";return d[h]=concat(d[h]||[],[g]),d},{}),pick:(c)=>(d)=>reduce((g,h)=>{return h in d&&(g[h]=d[h]),g},{})(c)};module.exports=tf;

